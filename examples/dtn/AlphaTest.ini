[General]
network = inet.GRC.examples.dtn.Highway
debug-on-errors = false

cmdenv-express-mode = true
cmdenv-autoflush = false
cmdenv-status-frequency = 10s
tkenv-plugin-path = ../../../etc/plugins
tkenv-image-path = bitmaps
repeat = 10
seed-set = ${repetition}

sim-time-limit = 3600s

**.debug = false
**.coreDebug = false


# channel physical parameters
*.obstacles.obstacles = xmldoc(${polyFile = "Maps/Milan/downtown.poly.xml", "Maps/Moscow/poly.sumo.xml", "Maps/WashingtonDC/residential_grid.poly.xml"!launchConfig})
*.obstacles.allowObjectInsideObstacle = true
*.annotations.draw = false

*.channelControl.carrierFrequency = 5.9GHz
*.channelControl.pMax = 1W
*.channelControl.sat = -110dBm
*.channelControl.alpha = 2
*.channelControl.numChannels = 2

**.host[*].wlan0.**.channelNumber = 0
**.host[*].wlan1.**.channelNumber = 1
**.rsu*.wlan0.**.channelNumber = 0
**.rsu*.wlan1.**.channelNumber = 1

# TraCIScenarioManagerLaunchd
*.manager.updateInterval = 1s
*.manager.host = "localhost"
*.manager.port = 10001
*.manager.moduleName = "host"
*.manager.moduleDisplayString = ""
*.manager.autoShutdown = true
*.manager.margin = 25
*.manager.launchConfig = xmldoc(${launchConfig ="Maps/Milan/downtown.launch.xml", "Maps/Moscow/launch.sumo.xml", "Maps/WashingtonDC/residential_grid.launch.xml" })


*.manager.meanNumberOfCars = ${numberOfVehicles = 10,20,30,40,50,100}
*.manager.carHysteresisValue = ${numberOfVehicles}/10
*.manager.getStatistics = false
*.manager.rsuPrefix= "rsu"
*.manager.rsuPlacement = xmldoc(${poaFile = "Maps/Milan/poa.sumo.xml", "Maps/Moscow/poa.sumo.xml","Maps/WashingtonDC/residential_grid.poa.xml"!launchConfig})

#SumoNetwork parser
*.sumoNetwork.networkConfig = xmldoc(${netFile="Maps/Milan/downtown.sumo.xml", "Maps/Moscow/mapa.sumo.xml","Maps/WashingtonDC/residential_grid.mapa.xml"!launchConfig})
*.sumoNetwork.debug = false

**.navigationSystem.poaConfig =  xmldoc(${poaFile})


#avoid ARP messages
**.arp.globalARP = true

#DTN protocol parameters
**.host[*].dtnProtocol.maxRange = 500m
**.host[*].dtnProtocol.bitrate = 27Mbps
**.host[*].**.fragmentSize = 450B

##Message generation parameters
**.host[*].msgGenerator.interMsgTime = 10s
**.host[*].msgGenerator.phaseTime = uniform(0s, 10s)

#Logging parameters

**.host[*].msgGenerator.**.scalar-recording = true
**.host[*].dtnProtocol.**.scalar-recording = true

**.rsu*.sinkApp.**.scalar-recording = true

**.host[*].**.mac.**.scalar-recording = true
**.host[*].**.radio.**.scalar-recording = true

**.DTNBackBone.**.scalar-recording = true
**.DTNBackBone.**.vector-recording = true

**.vector-recording = false
**.scalar-recording = false

[Config AlphaTest]

*.manager.moduleType = ${dtnImplementation = "inet.GRC.nodes.CarDtnMsdp"}
*.manager.rsuModule = "inet.GRC.nodes.DTNSinkNode"

# nic settings
**.wlan*.bitrate = 27Mbps

**.propagationModel = "NakagamiModel"
**.wlan*.radio.carrierFrequency = 5.9GHz
**.wlan*.mac.mtu = 2346B
**.mac.basicBitrate = 6Mbps
**.mac.address = "auto"

**.mac.maxQueueSize = 50
**.mac.rtsThresholdBytes = 2346B
**.mac.retryLimit = 7
**.mac.cwMinData = 15
**.mac.cwMinMulticast = 15 

**.radio.transmitterPower = 63mW 			#18dBm
**.radio.TransmissionAntennaGainIndB = 5dB
**.radio.ReceiveAntennaGainIndB = 5dB
**.radio.thermalNoise = -110dBm
**.radio.sensitivity = -82dBm				#Sensitividad para un data rate de 6Mbps
**.radio.snirThreshold = 4dB 
**.radio.pathLossAlpha = 2.3 	# Vehicles-as-obstacles según el estudio de alcance (Con el m en su valor por defecto (1): 2.2 y 2.4) 
**.radio.nak_m = 0.7			# Vehicles-as-obstacles según el estudio de alcance

#MSDP Settings
#Alpha varies from 0 to 2, 1 is the base case
**.host[*].beaconsApp.alpha = ${alpha = 0..2 step 0.1}

[Config GreedyRef]

*.manager.moduleType = ${dtnImplementation = "inet.GRC.nodes.CarDtnDistance"}
*.manager.rsuModule = "inet.GRC.nodes.DTNSinkNode"

# nic settings
**.wlan*.bitrate = 27Mbps

**.propagationModel = "NakagamiModel"
**.wlan*.radio.carrierFrequency = 5.9GHz
**.wlan*.mac.mtu = 2346B
**.mac.basicBitrate = 6Mbps
**.mac.address = "auto"

**.mac.maxQueueSize = 50
**.mac.rtsThresholdBytes = 2346B
**.mac.retryLimit = 7
**.mac.cwMinData = 15
**.mac.cwMinMulticast = 15 

**.radio.transmitterPower = 63mW 			#18dBm
**.radio.TransmissionAntennaGainIndB = 5dB
**.radio.ReceiveAntennaGainIndB = 5dB
**.radio.thermalNoise = -110dBm
**.radio.sensitivity = -82dBm				#Sensitividad para un data rate de 6Mbps
**.radio.snirThreshold = 4dB 
**.radio.pathLossAlpha = 2.3 	# Vehicles-as-obstacles según el estudio de alcance (Con el m en su valor por defecto (1): 2.2 y 2.4) 
**.radio.nak_m = 0.7			# Vehicles-as-obstacles según el estudio de alcance

[Config RandAndDirect]

*.manager.moduleType = ${dtnImplementation = "inet.GRC.nodes.CarDtnDirect","inet.GRC.nodes.CarDtnRandom" }
*.manager.rsuModule = "inet.GRC.nodes.DTNSinkNode"

# nic settings
**.wlan*.bitrate = 27Mbps

**.propagationModel = "NakagamiModel"
**.wlan*.radio.carrierFrequency = 5.9GHz
**.wlan*.mac.mtu = 2346B
**.mac.basicBitrate = 6Mbps
**.mac.address = "auto"

**.mac.maxQueueSize = 50
**.mac.rtsThresholdBytes = 2346B
**.mac.retryLimit = 7
**.mac.cwMinData = 15
**.mac.cwMinMulticast = 15 

**.radio.transmitterPower = 63mW 			#18dBm
**.radio.TransmissionAntennaGainIndB = 5dB
**.radio.ReceiveAntennaGainIndB = 5dB
**.radio.thermalNoise = -110dBm
**.radio.sensitivity = -82dBm				#Sensitividad para un data rate de 6Mbps
**.radio.snirThreshold = 4dB 
**.radio.pathLossAlpha = 2.3 	# Vehicles-as-obstacles según el estudio de alcance (Con el m en su valor por defecto (1): 2.2 y 2.4) 
**.radio.nak_m = 0.7			# Vehicles-as-obstacles según el estudio de alcance
